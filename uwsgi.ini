[uwsgi]
# Basic uWSGI configuration
virtualenv = /var/www/resume/venv
pythonpath = /var/www/resume
module = wsgi:app
master = true
processes = 1  # Lower number of processes for debugging
threads = 8  # Reduced threads to avoid concurrency issues
enable-threads = true

# Socket configuration
socket = /var/www/resume/resume.sock
chmod-socket = 660
chown-socket = www-data:www-data

# Process management
vacuum = true
die-on-term = true

# Logging
logto = /var/log/uwsgi/%n.log
log-4xx = true
log-5xx = true
log-slow = 1000
log-date = true

# WebSocket and long-polling support
http-websockets = true
http-timeout = 300
so-keepalive = 30
http-keepalive = 300
http-auto-chunked = true

# Gevent
gevent = 1000
gevent-early-monkey-patch = true
async = 1000

# Memory and buffer size
buffer-size = 65536  # Increased buffer size
reload-on-rss = 4096  # Reload process if memory consumption gets high

# Harakiri (timeout for long-running requests)
harakiri = 60
harakiri-verbose = true

# Limits
limit-post = 65536  # Limit POST request size
max-requests = 5000
max-worker-lifetime = 3600

# Performance and optimizations
optimize = 2
no-defer-accept = true
listen = 1024

# Memory reporting
memory-report = true

# Monitoring and stats (optional)
# stats = /tmp/statsock
# stats-http = true

# Application specific settings
env = FLASK_ENV=production
env = FLASK_APP=app.py

# Debugging reload (for easy reloads during testing)
touch-reload = /var/www/resume/wsgi.py

# Add gevent logging to trace issues with worker shutdowns
log-gevent = true
